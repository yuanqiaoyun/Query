{"remainingRequest":"/Users/liangxudong/Desktop/Query/lk-todo-selfDefineEvent/node_modules/babel-loader/lib/index.js!/Users/liangxudong/Desktop/Query/lk-todo-selfDefineEvent/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liangxudong/Desktop/Query/lk-todo-selfDefineEvent/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangxudong/Desktop/Query/lk-todo-selfDefineEvent/src/components/toDolist/ToDoHead.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangxudong/Desktop/Query/lk-todo-selfDefineEvent/src/components/toDolist/ToDoHead.vue","mtime":1577672302523},{"path":"/Users/liangxudong/Desktop/Query/lk-todo-selfDefineEvent/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangxudong/Desktop/Query/lk-todo-selfDefineEvent/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangxudong/Desktop/Query/lk-todo-selfDefineEvent/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangxudong/Desktop/Query/lk-todo-selfDefineEvent/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0iOwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1RvRG9IZWFkJywKICAvLyBwcm9wczp7CiAgLy8gICBhZGRUb2RvOkZ1bmN0aW9uLAogIC8vIH0sICDkuIDml6bkvb/nlKjkuoboh6rlrprkuYnkuovku7bkuZ/lsLHmsqHlv4XopoHlho3pgJrov4dwcm9wc+adpeS8oOWAvOadpeS6huOAggogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YXNrVGl0bGU6ICcnCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8xLuiHquW3seS4gOW8gOWni+WGmeeahOOAguWcqOi/memHjOayoeacieWKoOWIpOaWre+8jOiAjOaYr+WcqGFwcC52dWXkuK3liqDnmoTliKTmlq0KICAgIC8v5pyA5aW955qE5pa55rOV5bqU6K+l5piv5Zyo6L+Z6YeM5bCx5byA5aeL5Yik5pat77yM5a6M5YWo5aSE55CG5aW95Lul5ZCO77yM5YaN5Lyg57uZ54i257uE5Lu244CCCiAgICAvLyBhZGRJdGVtKCl7CiAgICAvLyAgIGNvbnNvbGUubG9nKHRoaXMudGFza1RpdGxlKTsKICAgIC8vICAgdGhpcy5hZGRUb2RvKHRoaXMudGFza1RpdGxlKTsKICAgIC8vICAgdGhpcy50YXNrVGl0bGUgPSIiOwogICAgLy8gfQogICAgYWRkSXRlbTogZnVuY3Rpb24gYWRkSXRlbSgpIHsKICAgICAgdmFyIHRpdGxlID0gdGhpcy50YXNrVGl0bGUudHJpbSgpOyAvL+WJjeWQjuWOu+epuuOAggoKICAgICAgaWYgKCF0aXRsZSkgewogICAgICAgIGFsZXJ0KCLovpPlhaXlhoXlrrnkuI3og73kuLrnqboiKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHZhciB0b2RvID0gewogICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICBmaW5pc2hlZDogZmFsc2UKICAgICAgfTsgLy9FUzbnmoTor63ms5UgID09PT0ge3RpdGxlOnRpdGxlLGZpbmlzaGVkOmZhbHNlfQogICAgICAvLyB0aGlzLmFkZFRvZG8odG9kbyk7ICBwcm9wc+S8oOWAvOaWueW8j+OAggogICAgICAvL+iHquWumuS5ieS6i+S7tgoKICAgICAgdGhpcy4kZW1pdCgnYWRkVG9kbycsIHRvZG8pOwogICAgICB0aGlzLnRhc2tUaXRsZSA9ICcnOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ToDoHead.vue"],"names":[],"mappings":";;;;;;;;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA;AACA;AACA;AACA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,OARA,qBAQA;AACA,UAAA,KAAA,GAAA,KAAA,SAAA,CAAA,IAAA,EAAA,CADA,CACA;;AACA,UAAA,CAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,CAAA;AACA;AACA;;AACA,UAAA,IAAA,GAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA,CANA,CAMA;AACA;AACA;;AACA,WAAA,KAAA,CAAA,SAAA,EAAA,IAAA;AAEA,WAAA,SAAA,GAAA,EAAA;AACA;AApBA;AAVA,CAAA","sourcesContent":["<template>\n  <div id=\"todo-head\">\n     <input  type=\"text\" placeholder=\"请输入今天的任务清单\" v-model=\"taskTitle\" @keyup.enter=\"addItem\"/>\n  </div>\n  <!--  在这里并没有用到射门组件，就是原生的html结合vue完成的 -->\n</template>\n\n<script>\nexport default {\n  name:'ToDoHead',\n  // props:{\n  //   addTodo:Function,\n  // },  一旦使用了自定义事件也就没必要再通过props来传值来了。\n  data(){\n    return {\n      taskTitle:'',\n    }\n  },\n  methods:{\n   //1.自己一开始写的。在这里没有加判断，而是在app.vue中加的判断\n   //最好的方法应该是在这里就开始判断，完全处理好以后，再传给父组件。\n    // addItem(){\n    //   console.log(this.taskTitle);\n    //   this.addTodo(this.taskTitle);\n    //   this.taskTitle =\"\";\n    // }\n    addItem(){\n      const  title = this.taskTitle.trim();//前后去空。\n      if(!title){\n        alert(\"输入内容不能为空\");\n        return;\n      }\n      let todo={title,finished:false}; //ES6的语法  ==== {title:title,finished:false}\n      // this.addTodo(todo);  props传值方式。\n      //自定义事件\n      this.$emit('addTodo',todo);\n\n      this.taskTitle = '';\n    }\n  },\n}\n</script>\n\n<style scoped>\n#todo-head input{\n  width:560px;\n  height:28px;\n  border-radius:3px;\n  padding:4px 7px;\n  border:1px solid #ccc;\n  outline:none;\n  font-size:14px;\n}\n</style>"],"sourceRoot":"src/components/toDolist"}]}